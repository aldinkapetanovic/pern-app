services:
  postgres:
    user: postgres
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: perndb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    # ports:
      # - "5000:5000"
    environment:
      - NODE_ENV=production
    depends_on:
      - postgres
    restart: unless-stopped  # Add restart policy here
    # volumes:
    #   - ./server:/app

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    # ports:
    #   - "8080:80"
    depends_on:
      - backend
    restart: unless-stopped  # Add restart policy here
    # volumes:
    #   - ./client:/app

  # nginx:
  #   image: nginx:alpine
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
  #     - ./client/build:/usr/share/nginx/html
  #   ports:
  #     - "80:80"   # Production
  #     - "8080:8080" # Development proxy
  #   depends_on:
  #     - frontend

# networks:
#   pern_network:

volumes:
  postgres_data: