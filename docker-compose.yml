# version: '3.8'
x-postgres-common:
  &postgres-common
  image: postgres:17
  user: postgres
  restart: always
  healthcheck:
    test: 'pg_isready -U postgres --dbname=postgres'
    interval: 10s
    timeout: 5s
    retries: 5

services:
  postgres:
    user: postgres
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: perndb
    restart: unless-stopped
    ports:
      - "5434:5432"
    volumes:
      - ./postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
    depends_on:
      - postgres
      - minio  # Added dependency on MinIO
    restart: unless-stopped

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    ports:
      - "8080:80"
    depends_on:
      - backend
    restart: unless-stopped

  postgres_primary:
    <<: *postgres-common
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: perndb
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres 
      -c wal_level=replica 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
    volumes:
      - ./postgres/00_init.sql:/docker-entrypoint-initdb.d/00_init.sql

  postgres_replica:
    <<: *postgres-common
    ports:
      - 5433:5432
    environment:
      PGUSER: replicator
      PGPASSWORD: replicator_password
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=postgres_primary --port=5432
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    depends_on:
      - postgres_primary

  minio:
    image: quay.io/minio/minio
    restart: unless-stopped
    ports:
      - "9000:9000"  # MinIO server port
      - "9001:9001"  # MinIO Console port
    environment:
      MINIO_ROOT_USER: admin # default credentials 'minioadmin:minioadmin'
      MINIO_ROOT_PASSWORD: password # default credentials 'minioadmin:minioadmin'
      MINIO_BUCKET_NAME: mybucket  # Replace with your desired bucket name
      MINIO_ACCESS_KEY: A0vtpX136d4hFJnwepUw  # Replace with your access key
      MINIO_SECRET_KEY: mJ73n2oeEcw6RMTr2m8jBq6jV7OPzl7L6uEgCoec    # Replace with your secret key
    command: server /data --console-address ":9001"  # Command to start MinIO
    volumes:
      - minio_data:/data  # Persistent storage for MinIO

volumes:
  postgres_data:
  minio_data:  # Volume for MinIO data
